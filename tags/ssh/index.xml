<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on Boxcounter的烂笔头</title>
    <link>http://boxcounter.com/tags/ssh/index.xml</link>
    <description>Recent content in Ssh on Boxcounter的烂笔头</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="http://boxcounter.com/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Host key verification failed的另类触发</title>
      <link>http://boxcounter.com/technique/2016-11-26-Host-key-verification-failed/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://boxcounter.com/technique/2016-11-26-Host-key-verification-failed/</guid>
      <description>

&lt;p&gt;最近几天在编写、测试部署脚本，准备配合Jenkins进行自动化的持续集成，因此需要全程静默执行，未想触发了一个SSH key问题，卡了我好几个小时……&lt;/p&gt;

&lt;h1 id=&#34;问题现象&#34;&gt;问题现象&lt;/h1&gt;

&lt;p&gt;从GitHub上clone过仓库的码农们都知道，用SSH比HTTPs更可靠。但SSH初次连接服务器时，通常会询问是否接受连接，比如这样：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The authenticity of host &amp;lsquo;github.com (192.30.252.1)&amp;rsquo; can&amp;rsquo;t be established.&lt;br /&gt;
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.&lt;br /&gt;
Are you sure you want to continue connecting (yes/no)?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;通常大家手输yes就可以继续clone代码了。而静默执行的脚本通常会在建立连接之前将目标站点保存到&lt;code&gt;known_hosts&lt;/code&gt;，以跳过询问。&lt;/p&gt;

&lt;p&gt;在我的脚本里是这样的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh_dir=&amp;quot;${HOME}/.ssh&amp;quot;
...
ssh-keyscan -v -t rsa ssh.github.com &amp;gt; ${ssh_dir}/known_hosts
git clone git@github.com:...
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但诡异的是在Jenkins部署过程中并没有生效，还是在建立SSH连接时卡住然后报错「Host key verification failed」。如果打开pty选项，则会如前面那样询问是否接受连接。而在我的本地虚拟机中则完全正常、全程安静地我都不好意思。&lt;/p&gt;

&lt;h1 id=&#34;初步尝试&#34;&gt;初步尝试&lt;/h1&gt;

&lt;p&gt;有怀疑过：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;是不是SSH目录或其中文件的权限设置不对，导致SSH无法读取？&lt;/li&gt;
&lt;li&gt;是不是known_hosts没有生效？格式不对？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;搜遍资料、试遍方法，几个小时过去了，依然没有进展。眼瞅着就没法轻松过周末了……&lt;/p&gt;

&lt;h1 id=&#34;新思路&#34;&gt;新思路&lt;/h1&gt;

&lt;p&gt;于是换了个思路，跳过Jenkins、直接SSH到被部署服务器上，手动执行脚本：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod u+x ./init.sh
sudo ./init.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;又看到了熟悉的询问，悬着手腕琢磨接下来该怎么办，转念一想「要不yes了看看它自己能不能保存到known_hosts、保存的格式是怎样的」。动手之前先&lt;code&gt;mv known_hosts known_hosts.old&lt;/code&gt;待会好diff。&lt;/p&gt;

&lt;h1 id=&#34;峰回路转&#34;&gt;峰回路转&lt;/h1&gt;

&lt;p&gt;输入yes，峰回路转 —— 并没有生成known_host。&lt;/p&gt;

&lt;p&gt;又陷入思考「难道权限不够？不对啊，我已经sudo了」，一想到sudo，顿时一个激灵 —— 当前是root帐号！赶紧&lt;code&gt;sudo ls -la /root/.ssh/&lt;/code&gt;，果然躺着一个known_hosts文件。&lt;/p&gt;

&lt;p&gt;到此，我才弄明白问题的原因：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;因为sudo，脚本是以root帐号身份执行，会去&lt;code&gt;/root/.ssh/known_hosts&lt;/code&gt;找known_hosts；&lt;/li&gt;
&lt;li&gt;脚本的ssh-keyscan将ssh.github.com保存进了&lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;，被部署服务器使用的是非root帐号；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SSH就没找到ssh-keyscan的结果，所以询问。而之所以在本地虚拟机里一切正常是因为我偷懒用的是root帐号。&lt;/p&gt;

&lt;p&gt;再一细想，我真是糊涂，怎么会整个脚本都sudo呢，这样岂不是git clone等等命令都是以root用户身份执行了吗……&lt;/p&gt;

&lt;h1 id=&#34;解决&#34;&gt;解决&lt;/h1&gt;

&lt;p&gt;找到了问题症结，解决也就简单了，花了十分钟把需要权限的命令都加上sudo，&lt;code&gt;echo xxx &amp;gt; $file&lt;/code&gt;都改成&lt;code&gt;echo xxx | sudo tee $file&lt;/code&gt;，去掉Jenkins构建步骤里的sudo 。&lt;/p&gt;

&lt;p&gt;Jenkins部署成功，欢度周末～&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>